import java.util.ArrayList;
/**
 * checks whether the collection is in alphabetical order.
 * @author Fatih Sevban Uyan?k
 * @version 18.04.2018
 */
public class Lab06c
{

    public static void main(String[] args)
    {
        // constructing an ArrayList that takes strings in alphabetical order.
        ArrayList<String> strings1 = new ArrayList<>();
        strings1.add( "Ahmed"  );
        strings1.add( "Arif"   );
        strings1.add( "Atiye"  );
        strings1.add( "Esma"   );
        strings1.add( "Fatih"  );
        strings1.add( "Mehmed" );

        // printing out the result.
        System.out.println( "result : " + isInLexicographicOrder(strings1) );

        // constructing an ArrayList that takes strings not in alphabetical order.
        ArrayList<String> strings2 = new ArrayList<>();
        strings2.add( "Fatih"  );
        strings2.add( "Ahmed"  );
        strings2.add( "Arif"   );
        strings2.add( "Atiye"  );
        strings2.add( "Esma"   );
        strings2.add( "Mehmed" );

        // printing out the result.
        System.out.println( "result : " + isInLexicographicOrder(strings2) );
    }

    /**
     * checks whether an ArrayList is in alphabetical order.
     * @param strings is the ArrayList containing strings.
     * @return the boolean type according to the result.
     */
    private static boolean isInLexicographicOrder( ArrayList<String> strings )
    {
        if ( strings.size() == 1 )
            return true;

        if ( strings.get(0).compareTo( strings.get(1) ) > 0 )
            return false;

        ArrayList<String> passed = new ArrayList<>();
        for ( int i = 1 ; i < strings.size() ; i++ )
            passed.add( strings.get(i) );

        return  isInLexicographicOrder( passed );
    }

}